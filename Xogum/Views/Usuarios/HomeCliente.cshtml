@model IEnumerable<Xogum.ViewModels.Usuario.UsuarioExibicaoViewModel>
@{
    ViewBag.Title = "HomeCliente";
    Layout = "~/Views/Shared/_LayoutUsuario.cshtml";
}

@*<h2>HomeCliente</h2>*@
<head>

    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-core.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-service.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-ui.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js"></script>
    <link rel="stylesheet" type="text/css"
          href="https://js.api.here.com/v3/3.1/mapsjs-ui.css" />

</head>

<script>

    function CriarMapa(la, lg) {
        document.write("<div id='mapContainer' style='width: 80vw; height: 60vh'></div>");

        // definição da chave da api para utilização
        var platform = new H.service.Platform({
            apikey: 'q_elI5myVl5U1fdw7ljnDng2unbifJRBGtOTChlKsFQ',
            useHTTPS: true,
            useCIT: true
        });

        // prepara a variavel de mapa para iniciar
        var defaultLayers = platform.createDefaultLayers();
        var mapContainer = document.getElementById('mapContainer');

        // inicializa o mapa
        var map = new H.Map(mapContainer, defaultLayers.vector.normal.map, {
            zoom: 15,
            center: { lat: 48.869145, lng: 2.314298 },
            pixelRatio: window.devicePixelRatio || 1
        });

        // para ocupar o tamanho inteiro do container a ser colocado
        window.addEventListener('resize', () => map.getViewPort().resize());
        var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));


        var ui = H.ui.UI.createDefault(map, defaultLayers);
        function addMarkerToGroup(group, coordinate, html) {
            var icon = new H.map.Icon("https://image.flaticon.com/icons/svg/226/226592.svg", { size: { w: 35, h: 35 } }),
                marker = new H.map.Marker(coordinate, { icon: icon });
            // add custom data to the marker
            marker.setData(html);
            group.addObject(marker);
        }
        // gerador de geolocation pelo navegador
        var geocoderService = platform.getGeocodingService();
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition
                (position => {
                    map.setCenter({
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    });
                    geocoderService.reverseGeocode(
                        {
                            mode: "retrieveAddress",
                            maxresults: 1,
                            prox: position.coords.latitude + ","
                                + position.coords.longitude
                        },
                        success => {
                            var { latitude, longitude } = position.coords;
                            console.log(`${latitude} , ${longitude}`);
                        },
                        error => {
                            console.error(error);
                        }
                    );
                })
        }


        // cria marcadores no mapa do banco
        for (var i = 0; i < la.length; i++) {
               var group = new H.map.Group();
            map.addObject(group);
            group.addEventListener('tap', function (evt) {
                var bubble = new H.ui.InfoBubble(evt.target.getGeometry(), {
                    content: evt.target.getData()
                });
                ui.addBubble(bubble);
            }, false);
            addMarkerToGroup(group, { lat: la[i], lng: lg[i] }, '<p><a href="Index">Informação do Motorista</p>');
            //map.addObject(marker);
        }
    }
</script>

<div class="container">
    <div class="row">
        <script>
            // cria vetor para armazenar as localizações proximas
            var la = [];
            var lg = [];
        </script>
    </div>
    @{ int cont = 1;}
    @foreach (var item in Model)
    {
        <label id='aux_@cont'></label>
        <script>
            var valores = "@item.Localizacao";
            valores = valores.split(",");
            var lat = valores[0];
            var lng = valores[1];
            la.push(lat);
            lg.push(lng);
        </script>
    }
    <div>
    </div>

    <div class="col-md-8">
        <script>CriarMapa(la, lg);</script>
    </div>
</div>