
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>HomeMotorista</title>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-core.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-service.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-ui.js"></script>
    <script type="text/javascript" src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js"></script>
    <link rel="stylesheet" type="text/css"
          href="https://js.api.here.com/v3/3.1/mapsjs-ui.css" />
    <script>
        function CriaMapa() {
            document.write("<div id='mapContainer' style='width: 80vw; height: 60vh'></div>");
            // definição da chave da api para utilização
            var platform = new H.service.Platform({
                apikey: 'q_elI5myVl5U1fdw7ljnDng2unbifJRBGtOTChlKsFQ',
                useHTTPS: true,
                useCIT: true
            });

            // prepara a variavel de mapa para iniciar
            var defaultLayers = platform.createDefaultLayers();
            var mapContainer = document.getElementById('mapContainer');

            // inicializa um mapa padrão
            var map = new H.Map(mapContainer, defaultLayers.vector.normal.map, {
                zoom: 15,
                center: { lat: -22.786000, lng: -45.1711673 },
                pixelRatio: window.devicePixelRatio || 1
            });
            // para ocupar o tamanho inteiro do container a ser colocado
            window.addEventListener('resize', () => map.getViewPort().resize());
            var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

            // Cria a UI da api para interações no mapa
            var ui = H.ui.UI.createDefault(map, defaultLayers);
            // Componente para gerar a posição de aonde o usuário está no momento
            var geocoderService = platform.getGeocodingService();
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition
                    (position => {
                        map.setCenter({
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        });
                        geocoderService.reverseGeocode(
                            {
                                mode: "retrieveAddress",
                                maxresults: 1,
                                prox: position.coords.latitude + ","
                                    + position.coords.longitude
                            },
                            success => {
                                var { latitude, longitude } = position.coords;
                                //console.log(`${latitude} , ${longitude}`);
                                var marker = new H.map.Marker({ lat: latitude, lng: longitude });
                                map.addObject(marker);
                            },
                            error => {
                                console.error(error);
                            }
                        );
                    })
            }
        }
    </script>

</head>
<body>
    <div class="container">
        <div class="row">
            
            <div class="col-md-4">
                Interface de requisições
            </div>
            <div class="col-md-8">
                <script>CriarMapa();</script>
            </div>
        </div>
    </div>
</body>
</html>
